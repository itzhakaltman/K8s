cat /etc/kubernetes/manifests/kube-apiserver.yaml

openssl x509 -in /etc/kubernetes/pki/apiserver.crt -text -noout

journalctl -u etcd.service -l

kubectl logs etcd-master

docker ps -a

docker logs 87fc

openssl x509 -in /etc/kubernetes/pki/etcd/server.crt -text

========================================================================================================================

kubectl get csr

kubectl get csr -jane -o yaml

kubectl certificate approve jane

========================================================================================================================
curl https://kube-master:6443/version


curl https://my-kube-playground:6443/api/v1/pods \
 --key admin.key
 --cert admin.crt
 --cacert ca.crt

 OR

kubectl get pods
    --server my-kube-playground:6443
    --client-key admin.key
    --client-certificate admin.crt
    --certificate-authority ca.crt



$HOME/.kube/config
--server my-kube-playground:6443
--client-key admin.key
--client-certificate admin.crt
--certificate-authority ca.crt


kubectl config view

kubectl config view --kubeconfig=my-custom-config

kubectl config use-context prod-user@production

kubectl config -h


cat ca.crt | base64

# echo "LS0...Qo=" | base64 --decode


Use Custom Context:
kubectl config --kubeconfig=/root/my-kube-config use-context research

Check Current:
kubectl config --kubeconfig=/root/my-kube-config current-context

========================================================================================================================

kubectl create -f developer-role.yaml
kubectl create -f devuser-developer-binding.yaml

kubectl get roles
kubectl get rolebindings
kubectl describe role developer
kubectl describe rolebinding devuser-developer-binding

kubectl auth can-i create deployment
kubectl auth can-i delete nodes

kubectl auth can-i create deployment --as dev-user
kubectl auth can-i delete nodes --as dev-user
kubectl auth can-i create pods --as dev-user --namespace test

kubectl get pods --as dev-user

kubectl create role developer --namespace=default --verb=list,create,delete --resource=pods
kubectl create rolebinding dev-user-binding --namespace=default --role=developer --user=dev-user

